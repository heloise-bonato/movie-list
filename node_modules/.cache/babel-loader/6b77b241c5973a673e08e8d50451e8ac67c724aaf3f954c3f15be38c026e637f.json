{"ast":null,"code":"var _jsxFileName = \"/Users/helobonato/Documents/projetos/movie-list/src/pages/Home/index.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Container, MovieList, Movie } from \"./styles\";\nimport { APIKey } from '../../config/key';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const image_path = 'https://image.tmdb.org/t/p/w500/';\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${APIKey}&language=en-US&page=1`).then(response => response.json()).then(data => setMovies(data.results));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Movies \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n      children: movies.map(movie => {\n        return /*#__PURE__*/_jsxDEV(Movie, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/details/${movie.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${image_path}${movie.poster_path}`,\n              alt: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", movie.title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"otjmu4tzfWe+EC4jKLTbx0XGaJs=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","Container","MovieList","Movie","APIKey","Link","jsxDEV","_jsxDEV","Home","_s","movies","setMovies","image_path","fetch","then","response","json","data","results","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","to","id","src","poster_path","alt","title","_c","$RefreshReg$"],"sources":["/Users/helobonato/Documents/projetos/movie-list/src/pages/Home/index.jsx"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { Container, MovieList, Movie } from \"./styles\"\nimport { APIKey } from '../../config/key'\nimport { Link } from 'react-router-dom'\n\nfunction Home() {\n\n    const [ movies, setMovies ] = useState([])\n    const image_path = 'https://image.tmdb.org/t/p/w500/'\n\n    useEffect(() => {\n\n        fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${APIKey}&language=en-US&page=1`)\n            .then(response => response.json())\n            .then(data => setMovies(data.results))\n    }, [])\n\n    return (\n        <Container>\n            <h1> Movies </h1>\n            <MovieList>\n                {movies.map(movie => {\n                    return (\n                        <Movie key={movie.id}>\n                            <Link to={`/details/${movie.id}`}>\n                                <img src={`${image_path}${movie.poster_path}`} alt={movie.title} />\n                            </Link>\n                            <span> {movie.title} </span>\n                        </Movie>\n                    )\n                })}\n            </MovieList>\n        </Container>\n    )\n\n}\n\nexport default Home;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,EAAEC,SAAS,EAAEC,KAAK,QAAQ,UAAU;AACtD,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,IAAI,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAEZ,MAAM,CAAEC,MAAM,EAAEC,SAAS,CAAE,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMa,UAAU,GAAG,kCAAkC;EAErDZ,SAAS,CAAC,MAAM;IAEZa,KAAK,CAAE,sDAAqDT,MAAO,wBAAuB,CAAC,CACtFU,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIN,SAAS,CAACM,IAAI,CAACC,OAAO,CAAC,CAAC;EAC9C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA,CAACN,SAAS;IAAAkB,QAAA,gBACNZ,OAAA;MAAAY,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACjBhB,OAAA,CAACL,SAAS;MAAAiB,QAAA,EACLT,MAAM,CAACc,GAAG,CAACC,KAAK,IAAI;QACjB,oBACIlB,OAAA,CAACJ,KAAK;UAAAgB,QAAA,gBACFZ,OAAA,CAACF,IAAI;YAACqB,EAAE,EAAG,YAAWD,KAAK,CAACE,EAAG,EAAE;YAAAR,QAAA,eAC7BZ,OAAA;cAAKqB,GAAG,EAAG,GAAEhB,UAAW,GAAEa,KAAK,CAACI,WAAY,EAAE;cAACC,GAAG,EAAEL,KAAK,CAACM;YAAM;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAG;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAChE,eACPhB,OAAA;YAAAY,QAAA,GAAM,GAAC,EAACM,KAAK,CAACM,KAAK,EAAC,GAAC;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAO;QAAA,GAJpBE,KAAK,CAACE,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAKZ;MAEhB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACM;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAGpB;AAACd,EAAA,CA9BQD,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AAgCb,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}